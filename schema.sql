DROP DATABASE democratic_playlist;
CREATE DATABASE democratic_playlist;
USE democratic_playlist;

DROP TABLE IF EXISTS album;
CREATE TABLE album (
    id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    prefix VARCHAR(31),
    year INTEGER(4) UNSIGNED NOT NULL DEFAULT 1942,
    disk SMALLINT UNSIGNED
);

DROP TABLE IF EXISTS artist;
CREATE TABLE artist (
    id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    prefix VARCHAR(31)
);

DROP TABLE IF EXISTS song;
CREATE TABLE song (
    id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    album_id INTEGER UNSIGNED NOT NULL,
    artist_id INTEGER UNSIGNED NOT NULL,
    title VARCHAR(255) NOT NULL,
    time SMALLINT UNSIGNED,
    track SMALLINT UNSIGNED,
    path VARCHAR(4096) NOT NULL,
    FOREIGN KEY (album_id) REFERENCES album (id),
    FOREIGN KEY (artist_id) REFERENCES artist (id)
);

DROP TABLE IF EXISTS playlist;
CREATE TABLE playlist (
    id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    song_id INTEGER UNSIGNED NOT NULL,
    played TIMESTAMP,
    FOREIGN KEY (song_id) REFERENCES song (id)
);

DROP TABLE IF EXISTS user;
CREATE TABLE user (
    id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255),
    username VARCHAR(16) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE
);

DROP TABLE IF EXISTS vote;
CREATE TABLE vote (
    id INTEGER UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
    user_id INTEGER UNSIGNED NOT NULL,
    playlist_id INTEGER UNSIGNED NOT NULL,
    FOREIGN KEY (user_id) REFERENCES user (id),
    FOREIGN KEY (playlist_id) REFERENCES playlist (id),
    UNIQUE(user_id, playlist_id)
);
